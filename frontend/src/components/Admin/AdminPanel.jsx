import React, { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import CreateModerator from './CreateModerator';
import UploadForm from './UploadForm';
import GalleryManager from './GalleryManager';

// –ò–∫–æ–Ω–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —ç–º–æ–¥–∑–∏, –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ SVG)
const ICONS = {
    dashboard: 'üìä',
    addModerator: 'üë•',
    upload: 'üì∑',
    gallery: 'üñºÔ∏è',
    logout: 'üö™'
  };

const AdminPanel = () => {
  const { user, logout } = useAuth();
  const [activeTab, setActiveTab] = useState('dashboard');

  const handleLogout = () => {
    logout();
  };

  const handlePublish = async () => {
    try {
      const response = await fetch('/api/admin/publish', {
        method: 'POST',
        credentials: 'include',
      });
      if (response.ok) {
        alert('–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã');
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
    }
  };

  // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  const navItems = [
    { id: 'dashboard', label: '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', icon: ICONS.dashboard },
    ...(user && user.role === 'admin' ? [{ id: 'addModerator', label: '–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞', icon: ICONS.addModerator }] : []),
    { id: 'upload', label: '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ', icon: ICONS.upload },
    { id: 'gallery', label: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–µ–π', icon: ICONS.gallery },
  ];

  // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∫–ª–∞–¥–∫–∏
  const renderContent = () => {
    switch (activeTab) {
      case 'dashboard':
        return (
          <div className="bg-white p-6 rounded-lg shadow-md">
            <h2 className="text-2xl font-playfair font-bold mb-4">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="bg-blue-100 p-4 rounded-lg shadow">
                <h3 className="font-bold mb-2">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                <button 
                  onClick={handlePublish}
                  className="w-full bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition-all mt-2"
                >
                  –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                </button>
              </div>
              <div className="bg-purple-100 p-4 rounded-lg shadow">
                <h3 className="font-bold mb-2">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</h3>
                <p>–†–æ–ª—å: {user?.role || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                <p>–ò–º—è: {user?.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
              </div>
              <div className="bg-amber-100 p-4 rounded-lg shadow">
                <h3 className="font-bold mb-2">–°–ø—Ä–∞–≤–∫–∞</h3>
                <p>–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ"</p>
              </div>
            </div>
          </div>
        );
      case 'addModerator':
        return <CreateModerator />;
      case 'upload':
        return <UploadForm />;
      case 'gallery':
        return <GalleryManager />;
      default:
        return <div>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª</div>;
    }
  };

  return (
    <div className="flex min-h-screen bg-gray-100 font-poppins">
      {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="w-64 bg-gray-800 text-white min-h-screen shadow-lg">
        <div className="p-4 border-b border-gray-700">
          <h1 className="text-xl font-playfair font-bold">–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h1>
          <p className="text-gray-400 text-sm">{user?.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'}</p>
        </div>
        
        <nav className="mt-4">
          <ul>
            {navItems.map((item) => (
              <li key={item.id}>
                <button
                  onClick={() => setActiveTab(item.id)}
                  className={`w-full text-left px-4 py-3 flex items-center space-x-3 hover:bg-gray-700 transition-colors ${
                    activeTab === item.id ? 'bg-gray-700 border-l-4 border-blue-500' : ''
                  }`}
                >
                  <span className="text-lg">{item.icon}</span>
                  <span>{item.label}</span>
                </button>
              </li>
            ))}
            <li className="mt-4">
              <button
                onClick={handleLogout}
                className="w-full text-left px-4 py-3 flex items-center space-x-3 text-red-300 hover:bg-gray-700 hover:text-red-200 transition-colors"
              >
                <span className="text-lg">{ICONS.logout}</span>
                <span>–í—ã–π—Ç–∏</span>
              </button>
            </li>
          </ul>
        </nav>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 p-8 overflow-auto">
        <div className="max-w-5xl mx-auto">
          {renderContent()}
        </div>
      </div>
    </div>
  );
};

export default AdminPanel;